plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13' // Pastikan versi ini sesuai atau terbaru
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

javafx {
    version = "17.0.6" // Sesuaikan dengan versi JavaFX yang Anda inginkan
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
}

application {
    // mainModule = 'org.example' // Dikomentari untuk menjalankan sebagai unnamed module
    mainClass = 'org.example.MainApp'
}

dependencies {
    // JavaFX (sudah diatur oleh plugin, tapi bisa ditambahkan spesifik jika perlu)
    implementation "org.openjfx:javafx-controls:${javafx.version}"
    implementation "org.openjfx:javafx-fxml:${javafx.version}"
    implementation "org.openjfx:javafx-graphics:${javafx.version}"

    // Hibernate
    implementation 'org.hibernate:hibernate-core:5.6.15.Final' // Ganti dengan versi terbaru jika perlu

    // MySQL Connector
    implementation 'mysql:mysql-connector-java:8.0.32' // Ganti dengan versi terbaru jika perlu

    // Logging - SLF4J API dan Log4j2 Implementation
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'


    // JUnit Jupiter API for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    // Mockito for testing
    testImplementation 'org.mockito:mockito-core:4.8.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.1'

    // H2 Database for in-memory testing (opsional)
    testImplementation 'com.h2database:h2:2.1.214'
}

test {
    useJUnitPlatform()
}

// Untuk menjalankan dari IDE tanpa Java Modules, konfigurasi JVM args untuk task 'run'
// mungkin diperlukan jika plugin tidak menanganinya secara otomatis setelah mainModule dikomentari.
// Namun, plugin 'org.openjfx.javafxplugin' biasanya menangani ini.
// Jika masih ada masalah, Anda bisa mencoba menambahkan:
// run {
//    jvmArgs += '--module-path'
//    jvmArgs += configurations.compileClasspath.asPath // atau path ke JavaFX SDK jika tidak di classpath
//    jvmArgs += '--add-modules'
//    jvmArgs += javafx.modules.join(',')
// }
// Tetapi coba jalankan dulu tanpa ini.